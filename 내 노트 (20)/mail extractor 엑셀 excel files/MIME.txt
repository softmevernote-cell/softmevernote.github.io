http://righths.blog.me/40133354460

http://pic.dhe.ibm.com/infocenter/wtxdoc/v8r4m0/index.jsp?topic=%2Fcom.ibm.websphere.dtx.adapmime.doc%2Fconcepts%2Fc_mime_MIME_Structure_.htm

1. 정의
	MIME(Multipurpose Internet Mail Extensions)은 기본적인 테스트 지향 인터넷 메일 시스템을 확장하여, 
	메시지에 임의의 바이너리 파일을 포함할 수 있게 해주는 것.

	MIME은 인터넷 메일 시스템의 확장을 위해 개발되었지만, 그 외에도 다른 많은 용도로 사용되고 있다.

HEADER의 종류
	MIME-Version
	Content-Type
	Content-Transfer-Encoding
	Content-Description
	Content-IDHEADER의 종류
MIME-Version
Content-Type
Content-Transfer-Encoding
Content-Description
Content-ID

Content-Type 헤더는 이중의 목적을 갖고 있다. 첫째로, 이 헤더는 디스플레이를 위해 MUA가 메시지를 충분히 잘 파싱 할 수 있도록 데이터의 유형을 식별한다.

Content-Type의 종류
text
image
audio
video
application
multipart
message
multipart와 message는 composite유형으로 래퍼(wrapper)로 다른 유형들을 감싸고 있다.

Content-Transfer-Encoding 헤더는 메시지에서 가장 중요한 MIME정보이다. 이 헤더는 메시지나 메시지 부분에서 수행되는 인코딩 유형을 보여주고, 그에 따른 디코딩 방법에 관한 정보를 제공한다.

7bit
8bit
binary
quoted-printable
base64
커스텀 혹은 사용자 정의 방식
qouted-printable과 base64는 7bit형식으로 축소하는 인코딩유형이다. 실제로 7bit로 되어있는 message만이 MTA를 제대로 통과하기 때문에 사용되는것은 7bit, qouted-printable, base64이다.

Content-ID는 헤더를 사용해서 다른 메시지의 본문을 참조할 수 있다. 기본적으로 옵션이고 message/external-body일때는 필수적으로 사용되지만 요즘에는 URL 링크가 쉽기 때문에 URL링크를 많이 사용한다.


MIME 인코딩

일반적 인코딩 방법 : 7비트 텍스트는 그대로 내버려두어야 하고 Qouted-printable 인코딩은 명목상 텍스트이며, 사람이 읽을 수 있지만 게이트웨이로 부터 보호되어야 하는 데이터를 위해 사용해야 한다. Base64 인코딩은 사람이 읽을 수 있는 형식으로 전송될 필요가 없는 바이너리 데이터나 임의의 옥텟 스트림을 표현하기 위해 사용해야 한다.

7bit data는 단순한 US_ASCII텍스트이다. 캐리지 리턴과 라인피드 문자는 단지 행 끝의 CRLF의 부분으로만 발생한다.

Quoted-Printable
보통 텍스트이며 사람이 읽을 수 있지만 "7bit"가 아닌 데이터를 위해 사용해야한다. 

인코딩 순서
본래의 데이터를 비트가 big-endian포맷임을 확인한 다음에 옥텟 스트림으로 변경한다.
본래의 데이터에서 CRLF행분리를 제외하고 모든 옥텟은 하나의 등호 표시(=)로 변경될 것이고, 이 등호 표시 뒤에는 옥텟의 문자 값을 표현하는 2개 문자로 된 16진수가 따라온다. 만일 또 다른 규칙이 대안적인 방식을 허용하지 않는다면, 옥텟은 반드시 그렇게 변경되어야 한다. 16진수 소문자는 사용되지 않는다.
ASCII 십진값이 33과 60사이 그리고 62와 126사이의 값을 가진 옥텟은 자신의 ASCII문자로 표현된다.
만일 행의 마지막에 여백이 남는다면, 여백은 변환되고 규칙 #2로 인코딩되어야 한다.
본래의 데이터에 있는 행분리는 CRLF형식으로 변경되어야 한다.
행은 76문자를 넘지 않으며, 끝을 알려주는 CRLF문자를 포함하지 않는다. 만일 본래 데이터가 76문자보다 긴 행을 포함하면, 한 행을 보통의 CRLF 전에 나오는 등호표시(=)로 끝냄으로써 소프트 행분리를 추가한다.
Base64가 안정적이지만 효율적으로는 Qouted-Printable이 더 좋다.(MTA의 행분리 때문에 data 손상가능성 존재)

Base64

3개의 옥텟(24비트)을 갖게 되고, 그것을 4개의 6비트 블록으로 매핑한 다음 각각의 6비트 블록을 64문자 알파벳 중 한 문자로 표현한다. 이러한 매핑 때문에, base64로 인코딩된 정보는 본래 데이터보다 약 3분의 1정도 길어진다.

마지막 패딩(6bit를 맞추기 위해 들어가는 0값)은 등호로 표시된다.

MIME 경계
하이픈(-). 이것은 base64로 인코딩된 데이터에서 존재하지 않는다고 보장된다.
알파벳과 문자로된 US-ASCII문자
다른 곳에서는 나타나지 않을 문자 시퀀스
"+" 혹은 "."("."은 피하는 것이 좋음)

MIME 메시지 작성에서 문제가 될 수 있는 몇 가지 사항
본문 부분을 구분하기 위해 메시지의 본문에서 MIME 경계를 사용할 때는 행 시작 부분에서 두 개의 하이픈을 사용해야 한다는 점을 기억해야 한다.
주어진 영역(즉 메시지 혹은 내장된 부분)에서 마지막 MIME경계 표시기에 두 개의 하이픈을 덧붙여야 한다는 점을 기억해야 한다
헤더에 대한 파라미터는 세미콜론(;)으로 분리된다는 점을 주의해야 한다
목표로 하고 있는 MUA가 지원하지 못하는 표준 부분(모호한 MIME 매체 유형)을 사용하지 않도록 주의해야 한다. 의심스러울 때는 테스트를 통해 확인한다.
[출처] MIME|작성자 정글북

